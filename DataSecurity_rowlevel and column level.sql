
--- CREATE ROLE

USE ROLE SYSADMIN; 

SELECT *, FROM EMPLOYEEDATA  

CREATE OR REPLACE DATABASE DATA_MASKING;
CREATE OR REPLACE SCHEMA DATA_MASKING;

GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN; 

CREATE OR REPLACE TABLE EMPLOYEEDATA
(
EMPID INT,
NAME VARCHAR(100),
SALARY NUMBER(10,2),
ADHARCARD STRING
);


INSERT INTO EMPLOYEEDATA VALUES
(1,'A',100,'123456789'),
(2,'B',100,'143456789'),
(3,'C',100,'125456789') ;

SELECT * FROM EMPLOYEEDATA;

CREATE OR REPLACE TABLE CUSTOMERS (
ID NUMBER, 
NAME STRING,
EMAIL STRING,
COUNTRY_CODE STRING
);

INSERT INTO CUSTOMERS VALUES 
(138763, 'Kajal Yash','k-yash@gmail.com' ,'IN'), 
(896731, 'Iza Jacenty','jacentyi@stanford.edu','PL'),
(799521, 'Finn Conley','conley76@outlook.co.uk','IE');

SELECT * FROM CUSTOMERS;


----------------------------------


USE ROLE ACCOUNTADMIN;

CREATE OR REPLACE ROLE ANALYST ; 

SHOW GRANTS TO ROLE ANALYST ;

GRANT ROLE ANALYST TO USER SAIRAM;

GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE ANALYST;
GRANT USAGE ON DATABASE DATA_MASKING TO ROLE ANALYST;
GRANT USAGE ON SCHEMA  DATA_MASKING.DATA_MASKING TO ROLE ANALYST;
GRANT SELECT ON TABLE DATA_MASKING.DATA_MASKING.EMPLOYEEDATA TO ROLE ANALYST;
GRANT SELECT ON TABLE DATA_MASKING.DATA_MASKING.CUSTOMERS TO ROLE ANALYST;
GRANT ROLE ANALYST TO USER SAIRAM;

USE ROLE ANALYST;

SELECT * FROM DATA_MASKING.DATA_MASKING.EMPLOYEEDATA ;

----CREATE MASK_ADMIN ROLE TO PROVIDE THE MASKING POLICY RELATED PRIVILIGES TO THAT ROLE

USE ROLE ACCOUNTADMIN;

CREATE OR REPLACE ROLE MASKING_ADMIN; 

GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE MASKING_ADMIN; 
GRANT USAGE ON DATABASE DATA_MASKING TO ROLE MASKING_ADMIN; 
GRANT USAGE ON SCHEMA DATA_MASKING.DATA_MASKING TO ROLE MASKING_ADMIN; 
--GRANT SELECT ON TABLE DATA_MASKING.DATA_MASKING.EMPLOYEEDATA TO ROLE MASKING_ADMIN; 
--GRANT SELECT ON TABLE DATA_MASKING.DATA_MASKING.CUSTOMERS TO ROLE MASKING_ADMIN; 

GRANT CREATE MASKING POLICY , CREATE ROW ACCESS POLICY ON SCHEMA DATA_MASKING.DATA_MASKING TO ROLE MASKING_ADMIN; 
GRANT APPLY MASKING POLICY ,APPLY ROW ACCESS POLICY ON ACCOUNT TO ROLE MASKING_ADMIN; 
GRANT ROLE MASKING_ADMIN TO USER SAIRAM;


USE ROLE MASKING_ADMIN; 

SHOW GRANTS TO ROLE MASKING_ADMIN;

---SELECT * FROM DATA_MASKING.DATA_MASKING.EMPLOYEEDATA


CREATE OR REPLACE MASKING POLICY CLS_ADHARCARD AS (VALUE STRING) 
RETURNS STRING ->
CASE WHEN CURRENT_ROLE() IN ('ANALYST') THEN VALUE ELSE ('XXXX' || RIGHT(VALUE,4)) END ;


ALTER TABLE EMPLOYEEDATA MODIFY COLUMN ADHARCARD SET MASKING POLICY CLS_ADHARCARD;


CREATE OR REPLACE MASKING POLICY EMAIL_MASK AS (VAL STRING) RETURNS STRING ->
  CASE
    WHEN CURRENT_ROLE() IN ('ANALYST') THEN VAL 
ELSE REGEXP_REPLACE(VAL,'.+\@','******@')
  END;

ALTER TABLE CUSTOMERS MODIFY COLUMN EMAIL SET MASKING POLICY EMAIL_MASK;

USE ROLE ANALYST;

SELECT * FROM CUSTOMERS;
SELECT * FROM EMPLOYEEDATA ; 

USE ROLE SYSADMIN;

SELECT * FROM CUSTOMERS;
SELECT * FROM EMPLOYEEDATA ; 



--- CREATE ROW ACCESS POLICY (ROW LEVEL ACCESS)

USE ROLE MASKING_ADMIN ;


CREATE OR REPLACE ROW ACCESS POLICY ROW_ACCESS_POLICY AS (VALUE VARCHAR)
RETURNS BOOLEAN ->
CASE WHEN 'ANALYST' = CURRENT_ROLE() THEN TRUE ELSE FALSE END;

--ALTER TABLE CUSTOMERS ADD ROW ACCESS POLICY ROW_ACCESS_POLICY ON (EMAIL) ; 

-- ALTER TABLE CUSTOMERS MODIFY COLUMN EMAIL UNSET MASKING POLICY;

ALTER TABLE CUSTOMERS ADD ROW ACCESS POLICY ROW_ACCESS_POLICY ON (NAME) ; 


-- Verify policy 
USE ROLE ANALYST;

SELECT * FROM CUSTOMERS;

USE ROLE SYSADMIN;

SELECT * FROM CUSTOMERS;






